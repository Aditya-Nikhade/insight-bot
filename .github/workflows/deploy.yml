name: CI/CD - Build and Deploy InsightBot

on:
  push:
    branches: [ "main" ]

jobs:
  # --- CI Job (No changes needed here) ---
  build:
    name: Build Docker Image (CI)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build Docker Image for Testing
        run: docker build -t insight-bot:test .

  # --- CD Job (This is where the changes are) ---
  deploy:
    name: Deploy to EC2 (CD)
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Navigate to the correct project directory on your server
            cd /home/ubuntu/insight-bot

            echo ">>> Pulling latest code from main branch..."
            git pull origin main

            echo ">>> Creating .env file from GitHub Secrets..."
            # This securely writes the secrets from GitHub to the .env file on the server
            cat <<EOF > .env
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            AZURE_AI_ENDPOINT=${{ secrets.AZURE_AI_ENDPOINT }}
            AI_TOKEN=${{ secrets.AI_TOKEN }}
            EOF

            echo ">>> Rebuilding and restarting services with docker compose..."
            # This single command stops the old container, builds the new image,
            # and starts the new container with the correct name, network, and environment.
            docker compose up --build -d

            echo ">>> Pruning old Docker images..."
            docker image prune -af

            echo ">>> Deployment successfully completed!"
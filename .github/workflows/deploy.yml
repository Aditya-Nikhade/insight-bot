name: CI/CD - Build and Deploy InsightBot

on:
  push:
    branches: [ "main" ]

jobs:
  # --- CI Job ---
  build:
    name: Build Docker Image (CI)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image
        run: |
          docker build -t insight-bot:test .

  # --- CD Job ---
  deploy:
    name: Deploy to EC2 (CD)
    runs-on: ubuntu-latest
    needs: build  # Ensures CI passes before running CD

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: SSH and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/insight-bot
            echo ">>> Pulling latest code..."
            git pull origin main

            echo ">>> Building new Docker image..."
            docker build -t insight-bot:latest .

            echo ">>> Stopping and removing old container..."
            docker stop insightbot-container || true
            docker rm insightbot-container || true

            echo ">>> Starting new container..."
            docker run -d -p 127.0.0.1:8000:5000 \
              --name insightbot-container \
              --restart always \
              -e "DATABASE_URL=${{ secrets.DATABASE_URL }}" \
              -e "REDIS_HOST=${{ secrets.REDIS_HOST }}" \
              -e "REDIS_PORT=${{ secrets.REDIS_PORT }}" \
              -e "AZURE_AI_ENDPOINT=https://models.github.ai/inference" \
              -e "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" \
              insight-bot:latest

            echo ">>> Pruning old Docker images..."
            docker image prune -af

            echo ">>> Deployment successfully completed!"